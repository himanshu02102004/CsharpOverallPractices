@model MVC_PART1.Models.LoginViewControl

@{
    ViewData["Title"] = "Login or Register";
}

<h2>Login / Register</h2>

<form asp-action="Login" method="post" id="accountForm">
    <div class="form-group">
        <label asp-for="UserName" class="form-label"></label>
        <input asp-for="UserName" class="form-control" />
        <span asp-validation-for="UserName" class="text-danger"></span>
    </div>

    <div class="form-group mt-2">
        <label asp-for="Password" class="form-label"></label>
        <input asp-for="Password" type="password" class="form-control" />
        <span asp-validation-for="Password" class="text-danger"></span>
    </div>

    <!-- Registration fields (hidden initially) -->
    <div id="registerFields" style="display:none;">
        <div class="form-group mt-2">
            <label asp-for="Name" class="form-label">Full Name</label>
            <input asp-for="Name" class="form-control" />
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>

        <div class="form-group mt-2">
            <label asp-for="Email" class="form-label">Email</label>
            <input asp-for="Email" class="form-control" />
            <span asp-validation-for="Email" class="text-danger"></span>
        </div>

        <div class="form-group mt-2">
            <label asp-for="Role" class="form-label">Role</label>
            <select asp-for="Role" class="form-control">
                <option value="">-- Select Role --</option>
                <option value="User">User</option>
                <option value="Admin">Admin</option>
            </select>
            <span asp-validation-for="Role" class="text-danger"></span>
        </div>
    </div>

    <!-- Buttons -->
    <div class="form-group mt-3 d-flex gap-2">
        <button type="submit" name="actiontype" value="Login" class="btn btn-primary">Login</button>
        <button type="submit" name="actiontype" value="Register" class="btn btn-success" id="registerBtn">Register</button>
    </div>
</form>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
    <script>
        let registerVisible = false;
        document.getElementById("registerBtn").addEventListener("click", function () {
            const regFields = document.getElementById("registerFields");

            if (!registerVisible) {
                regFields.style.display = "block";
                this.type = "submit";
                this.setAttribute("name", "actiontype");
                this.setAttribute("value", "Register");
                this.textContent = "Create Account";
                registerVisible = true;
            }
        });

        // ✅ Optional: Reset form after successful registration
        @if (TempData["RegisterSuccess"] != null)
        {
            <text>
                    document.addEventListener("DOMContentLoaded", function () {
                        document.getElementById("accountForm").reset();
                        document.getElementById("registerFields").style.display = "none";
                        document.getElementById("registerBtn").type = "button";
                        document.getElementById("registerBtn").textContent = "Register";
                    });
            </text>
        }
    </script>
}
